#!/usr/bin/python
#encoding:utf-8

import sys
import re

if __name__=="__main__":
    if len(sys.argv)==2:
        text = sys.stdin.read()
        words = text.split('\n')

        regex=ur"^\"\S+\"\s*=\s*\".*\"\s*;"
        dict = {}
        for word in words:
                if re.search(regex, word.strip()):
                        items = word.split('=')
                        str = items[0].strip()
                        key = str[ 1 : len(str) - 1 ]
                        str = items[1].strip()
                        value = str[ 1 : len(str) - 2 ]
                        dict[key] = value
                elif len(word.strip()) > 0:
                    print 'Unknown format:' + word

        if len(dict) == 0:
            exit()

        out_h = open(sys.argv[1]+'.h','w')
        out_m = open(sys.argv[1]+'.m','w')
        prefix = ''
        if sys.argv[1].find('/') > -1:
                tmp = sys.argv[1].split('/')
                prefix = tmp[len(tmp) - 1]


        file_header_commet = '/**\n *\n * ' + prefix + '\n *\n'
        file_header_commet += ' * This file is autogenerated by runScript.sh\n'
        file_header_commet += ' * Generates strings key macros\n'
        file_header_commet += ' *\n'
        file_header_commet += ' */\n\n\n\n'

        out_h.write(file_header_commet)
        out_h.write('NSString * RSCLocalizedSring(NSString *strKey);\n\n')

        out_m.write(file_header_commet)
        out_m.write('#import "' + prefix + '.h"\n\n')
        src_fun  = 'NSString* RSCLocalizedSring(NSString *strKey) {\n'
        src_fun += '    static NSString *VAL_NOT_FOUND = @"__VAL_NOT_FOUND__";\n'
        src_fun += '    NSString *localizedString = [[NSBundle mainBundle] localizedStringForKey:strKey value:VAL_NOT_FOUND table:nil];\n'
        src_fun += '    if ([localizedString isEqualToString:VAL_NOT_FOUND]) {\n'
        src_fun += '        if (![[[NSLocale preferredLanguages] objectAtIndex:0] isEqualToString:@"Base"]) {\n'
        src_fun += '            static NSBundle *EN_LANG_BUNDLE = nil;\n'
        src_fun += '            if (EN_LANG_BUNDLE == nil) {\n'
        src_fun += '                NSString *path = [[NSBundle mainBundle] pathForResource:@"Base" ofType:@"lproj"];\n'
        src_fun += '                EN_LANG_BUNDLE = [NSBundle bundleWithPath:path];\n'
        src_fun += '            }\n'
        src_fun += '            localizedString = [EN_LANG_BUNDLE localizedStringForKey:strKey value:@"" table:nil];\n'
        src_fun += '        } else {\n'
        src_fun += '            localizedString = @"";\n'
        src_fun += '        }\n'
        src_fun += '    }\n'
        src_fun += '    return localizedString;\n'
        src_fun += '}\n\n\n'
        out_m.write(src_fun);
        for key in dict.keys():
            #print key
            #print dict[key]
            str = key.strip().replace("__","##").replace("_"," ").title()
            suffix = str.replace(" ", "").replace("##","__")
            prefix = 'kRSCStr'
            out_h.write('#define RSCSTR_'+key.strip().upper()+'           RSCLocalizedSring('+prefix+suffix+')\n')
            out_h.write('extern NSString * const '+prefix+suffix+';\n\n')
            out_m.write('NSString * const '+prefix+suffix+'      = @"%s";\n' % key)
        out_h.close()
        out_m.close()
    else:
        print "usage:\n <path>/localization.py <path>/RSCStrings"
